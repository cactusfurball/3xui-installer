#!/usr/bin/env bash
set -euo pipefail

# ===== Helper =====
log() { echo -e "\e[1;32m[+]\e[0m üåµ $*"; }
warn(){ echo -e "\e[1;33m[!]\e[0m ‚ö†Ô∏è $*"; }
err() { echo -e "\e[1;31m[x]\e[0m ‚ùå $*" >&2; }

require_root() {
  if [[ "$(id -u)" -ne 0 ]]; then
    err "–ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç root (sudo -i)."
    exit 1
  fi
}

backup_file() {
  local f="$1"
  [[ -f "$f" ]] || return 0
  cp -a "$f" "${f}.bak.$(date +%Y%m%d-%H%M%S)"
}

comment_conflicting_directives() {
  local d="/etc/ssh/sshd_config.d"
  [[ -d "$d" ]] || return 0
  for f in "$d"/*.conf; do
    [[ -e "$f" ]] || continue
    backup_file "$f"
    sed -i -E 's/^[[:space:]]*#?[[:space:]]*(Port|PermitRootLogin|PasswordAuthentication)[[:space:]].*$/# disabled by installer: &/I' "$f"
  done
}

# ===== Start =====
require_root
log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã‚Ä¶"
export DEBIAN_FRONTEND=noninteractive
apt update && apt upgrade -y
apt install -y curl ufw sudo openssl jq lsof

# --- —Å–æ–∑–¥–∞—ë–º —é–∑–µ—Ä–∞ ---
read -rp "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ù–û–í–û–ì–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤): " NEWUSER
if ! id "$NEWUSER" &>/dev/null; then
  adduser --disabled-password --gecos "" "$NEWUSER"
  usermod -aG sudo "$NEWUSER"
fi

# --- –∫–ª—é—á–∏ ---
echo
echo "1) –í—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á"
echo "2) –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π (ssh-ed25519, —Å passphrase –ø–æ –∂–µ–ª–∞–Ω–∏—é)"
read -rp "–í—ã–±–æ—Ä [1/2]: " KEYMODE
mkdir -p "/home/$NEWUSER/.ssh"
chmod 700 "/home/$NEWUSER/.ssh"

if [[ "${KEYMODE:-1}" == "2" ]]; then
  KEYDIR="/root/generated-keys"
  mkdir -p "$KEYDIR"
  ssh-keygen -t ed25519 -f "$KEYDIR/${NEWUSER}_id_ed25519" -C "${NEWUSER}@$(hostname)"  # —Å–ø—Ä–æ—Å–∏—Ç passphrase
  cp "$KEYDIR/${NEWUSER}_id_ed25519.pub" "/home/$NEWUSER/.ssh/authorized_keys"
  warn "–°–∫–∞—á–∞–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: $KEYDIR/${NEWUSER}_id_ed25519 –∏ —É–¥–∞–ª–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞!"
else
  read -rp "–í—Å—Ç–∞–≤—å –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: " SSHKEY
  echo "$SSHKEY" > "/home/$NEWUSER/.ssh/authorized_keys"
fi
chmod 600 "/home/$NEWUSER/.ssh/authorized_keys"
chown -R "$NEWUSER:$NEWUSER" "/home/$NEWUSER/.ssh"

# --- ssh –ø–æ—Ä—Ç ---
read -rp "–ù–æ–≤—ã–π SSH –ø–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä 5569): " NEWPORT
backup_file /etc/ssh/sshd_config
comment_conflicting_directives

apply_sshd_directive() {
  local key="$1" val="$2"
  if grep -qiE "^[#[:space:]]*${key}[[:space:]]" /etc/ssh/sshd_config; then
    sed -i -E "s|^[#[:space:]]*${key}[[:space:]].*$|${key} ${val}|I" /etc/ssh/sshd_config
  else
    echo "${key} ${val}" >> /etc/ssh/sshd_config
  fi
}
apply_sshd_directive "Port" "$NEWPORT"
apply_sshd_directive "PermitRootLogin" "no"
apply_sshd_directive "PasswordAuthentication" "no"
apply_sshd_directive "PubkeyAuthentication" "yes"

ufw default deny incoming
ufw default allow outgoing
ufw allow "${NEWPORT}/tcp"
ufw allow 443/tcp
ufw --force enable

sshd -t && systemctl restart sshd

# --- —É—Å—Ç–∞–Ω–æ–≤–∫–∞ 3x-ui ---
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é 3x-ui‚Ä¶ üåµ"
bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)

# --- ssl ---
CERTDIR="/root/3xui-selfsigned"
mkdir -p "$CERTDIR"
IPV4="$(hostname -I | awk '{print $1}')"
CN="${IPV4:-$(hostname)}"
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout "$CERTDIR/selfsigned.key" -out "$CERTDIR/selfsigned.crt" \
  -subj "/CN=${CN}"
chmod 600 "$CERTDIR/selfsigned.key"
chmod 644 "$CERTDIR/selfsigned.crt"

# --- –ø–∞—Ç—á–∏–º –∫–æ–Ω—Ñ–∏–≥ 3x-ui ---
CONFIG="/etc/x-ui/x-ui.json"
if [[ -f "$CONFIG" ]]; then
  backup_file "$CONFIG"
  jq ".webCertFile=\"$CERTDIR/selfsigned.crt\" | .webKeyFile=\"$CERTDIR/selfsigned.key\"" "$CONFIG" > "${CONFIG}.tmp" && mv "${CONFIG}.tmp" "$CONFIG"
  systemctl restart x-ui
fi

# --- –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏ –Ω–∞ –≤—Ä–µ–º—è ---
PANEL_PORT=$(jq -r '.webPort // 54321' "$CONFIG" 2>/dev/null || echo "54321")
MYIP=$(curl -s https://api.ipify.org || echo "0.0.0.0")
ufw allow from "$MYIP" to any port "$PANEL_PORT" proto tcp

# --- bbr ---
backup_file /etc/sysctl.conf
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p >/dev/null

# --- –≤—ã–≤–æ–¥ ---
IP_SHOW="${IPV4:-<IP>}"
cat <<EOF

========================================
‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üåµüåµüåµ

‚ñ∂ SSH:
   ssh -p ${NEWPORT} ${NEWUSER}@${IP_SHOW} -i <–∫–ª—é—á>

‚ñ∂ –ü–∞–Ω–µ–ª—å 3x-ui:
   https://${IP_SHOW}:${PANEL_PORT}
   (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å —Å–º. –≤ "x-ui" ‚Üí –ø—É–Ω–∫—Ç 10)

   SSL —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω:
   crt: $CERTDIR/selfsigned.crt
   key: $CERTDIR/selfsigned.key

   ‚ö†Ô∏è –ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏ ${PANEL_PORT} –æ—Ç–∫—Ä—ã—Ç –í–†–ï–ú–ï–ù–ù–û –¥–ª—è —Ç–≤–æ–µ–≥–æ IP: ${MYIP}
   –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–Ω–µ–ª–∏ –∑–∞–∫—Ä–æ–π –¥–æ—Å—Ç—É–ø:
      ufw delete allow from ${MYIP} to any port ${PANEL_PORT}

‚ñ∂ Firewall:
   SSH (${NEWPORT}/tcp), VPN (443/tcp), –ü–∞–Ω–µ–ª—å (–≤—Ä–µ–º–µ–Ω–Ω–æ ${PANEL_PORT}/tcp –¥–ª—è ${MYIP})

‚ñ∂ –°–æ–≤–µ—Ç:
   - –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å —Å–±—Ä–æ—Å—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–ø.6, –ø.7).
   - –ù–∞—Å—Ç—Ä–æ–π VLESS/REALITY –Ω–∞ –ø–æ—Ä—Ç—É 443.
   - –í –ø–∞–Ω–µ–ª–∏ –¥–æ–±–∞–≤—å –ø—Ä–∞–≤–∏–ª–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è .ru-–¥–æ–º–µ–Ω–æ–≤ (—Å–º. –≥–∞–π–¥).
   - –ò—Å–ø–æ–ª—å–∑—É–π SSH-—Ç—É–Ω–Ω–µ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –≤ –±—É–¥—É—â–µ–º.
========================================

üåµüåµüåµ All done! Dancing cactus celebrates your VPN setup! üåµüåµüåµ

        \\   ^__^
         \\  (oo)\_______
            (__)\\       )\\/\\
                ||----w |
                ||     ||

EOF
