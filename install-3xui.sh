#!/usr/bin/env bash
set -euo pipefail

# ===== Helpers =====
log()  { echo -e "\e[1;32m[+]\e[0m $*"; }
warn() { echo -e "\e[1;33m[!]\e[0m $*"; }
err()  { echo -e "\e[1;31m[x]\e[0m $*" >&2; }

require_root() {
  if [[ "$(id -u)" -ne 0 ]]; then
    err "–ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç –æ—Ç root (sudo -i)."; exit 1
  fi
}

backup_file() {
  local f="$1"
  [[ -f "$f" ]] || return 0
  cp -a "$f" "${f}.bak.$(date +%Y%m%d-%H%M%S)"
}

comment_conflicting_directives() {
  local d="/etc/ssh/sshd_config.d"
  [[ -d "$d" ]] || return 0
  for f in "$d"/*.conf; do
    [[ -e "$f" ]] || continue
    backup_file "$f"
    sed -i -E \
      's/^[[:space:]]*#?[[:space:]]*(Port|PermitRootLogin|PasswordAuthentication|PubkeyAuthentication|MaxAuthTries|LoginGraceTime)[[:space:]].*$/# disabled by installer: &/I' \
      "$f"
  done
}

apply_sshd_directive() {
  local key="$1" val="$2"
  if grep -qiE "^[#[:space:]]*${key}[[:space:]]" /etc/ssh/sshd_config; then
    sed -i -E "s|^[#[:space:]]*${key}[[:space:]].*$|${key} ${val}|I" /etc/ssh/sshd_config
  else
    echo "${key} ${val}" >> /etc/ssh/sshd_config
  fi
}

detect_ipv4() {
  local ip
  ip="$(hostname -I 2>/dev/null | awk '{print $1}')"
  [[ -n "${ip:-}" ]] && echo "$ip" || curl -s https://api.ipify.org || echo "<IP>"
}

# ===== Start =====
require_root
export DEBIAN_FRONTEND=noninteractive

log "–û–±–Ω–æ–≤–ª—è—é —Å–∏—Å—Ç–µ–º—É –∏ —Å—Ç–∞–≤–ª—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏‚Ä¶"
apt update
apt -y upgrade
apt -y install curl ufw sudo openssl jq lsof

# --- —Å–æ–∑–¥–∞—ë–º —é–∑–µ—Ä–∞ (—Å –ø–∞—Ä–æ–ª–µ–º!) ---
read -rp "–í–≤–µ–¥–∏—Ç–µ –ò–ú–Ø –ù–û–í–û–ì–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤): " NEWUSER
if id "$NEWUSER" &>/dev/null; then
  warn "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $NEWUSER —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å."
else
  adduser --gecos "" "$NEWUSER"   # adduser –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ–Ω; –ø–æ–ø—Ä–æ—Å–∏—Ç –ø–∞—Ä–æ–ª—å —Å–∞–º
fi

# –µ—Å–ª–∏ adduser –Ω–µ —Å–ø—Ä–æ—Å–∏–ª (–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–±—Ä–∞–∑–∞—Ö), —Å–ø—Ä–æ—Å–∏–º —Å–∞–º–∏
if [[ -z "$(getent shadow "$NEWUSER" | cut -d: -f2)" || "$(getent shadow "$NEWUSER" | cut -d: -f2)" == "!" ]]; then
  while true; do
    read -srp "–ó–∞–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è ${NEWUSER}: " PW1; echo
    read -srp "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " PW2; echo
    [[ "$PW1" == "$PW2" && ${#PW1} -ge 8 ]] && break
    warn "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–ª–∏ –∏–ª–∏ –∫–æ—Ä–æ—á–µ 8 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
  done
  echo "${NEWUSER}:${PW1}" | chpasswd
  unset PW1 PW2
fi

usermod -aG sudo "$NEWUSER"

# --- –∫–ª—é—á–∏ SSH ---
echo
echo "1) –í—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á"
echo "2) –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π (ed25519, –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å passphrase)"
read -rp "–í—ã–±–æ—Ä [1/2]: " KEYMODE
install -d -m 700 "/home/$NEWUSER/.ssh"

if [[ "${KEYMODE:-1}" == "2" ]]; then
  KEYDIR="/root/generated-keys"
  mkdir -p "$KEYDIR"
  ssh-keygen -t ed25519 -f "$KEYDIR/${NEWUSER}_id_ed25519" -C "${NEWUSER}@$(hostname)"
  install -m 600 "$KEYDIR/${NEWUSER}_id_ed25519.pub" "/home/$NEWUSER/.ssh/authorized_keys"
  warn "–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏ —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ —Å —Å–µ—Ä–≤–µ—Ä–∞: $KEYDIR/${NEWUSER}_id_ed25519"
else
  read -rp "–í—Å—Ç–∞–≤—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: " SSHKEY
  printf '%s\n' "$SSHKEY" > "/home/$NEWUSER/.ssh/authorized_keys"
  chmod 600 "/home/$NEWUSER/.ssh/authorized_keys"
fi
chown -R "$NEWUSER:$NEWUSER" "/home/$NEWUSER/.ssh"

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH (–ø–æ—Ä—Ç –∏ —Ö–∞—Ä–¥–µ–Ω–∏–Ω–≥) ---
read -rp "–ù–æ–≤—ã–π SSH –ø–æ—Ä—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä 5569): " NEWPORT
[[ "$NEWPORT" =~ ^[0-9]+$ ]] || { err "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Ä—Ç"; exit 1; }

backup_file /etc/ssh/sshd_config
comment_conflicting_directives

apply_sshd_directive "Port" "$NEWPORT"
apply_sshd_directive "PermitRootLogin" "no"
apply_sshd_directive "PasswordAuthentication" "no"
apply_sshd_directive "PubkeyAuthentication" "yes"
apply_sshd_directive "MaxAuthTries" "3"
apply_sshd_directive "LoginGraceTime" "20s"
apply_sshd_directive "ClientAliveInterval" "300"
apply_sshd_directive "ClientAliveCountMax" "2"

# --- Firewall (UFW) ---
log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é UFW‚Ä¶"
ufw --force reset >/dev/null 2>&1 || true
ufw default deny incoming
ufw default allow outgoing

# –Ω–µ –æ—Ç—Ä–µ–∑–∞—Ç—å —Å–µ–±—è –≤–æ –≤—Ä–µ–º—è —Å–º–µ–Ω—ã –ø–æ—Ä—Ç–∞: –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–≤–∏–º 22/tcp
ufw allow 22/tcp
ufw limit "${NEWPORT}/tcp"
ufw allow 443/tcp

# –ø—Ä–∏–º–µ–Ω–∏–º –∏ –≤–∫–ª—é—á–∏–º –∑–∞—Ä–∞–Ω–µ–µ, –¥–æ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ sshd
ufw --force enable

# --- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSHD —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ ---
sshd -t
systemctl restart sshd

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ 3x-ui ---
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é 3x-ui‚Ä¶"
bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö SSL (–ù–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–∞–Ω–µ–ª—å!) ---
CERTDIR="/etc/ssl/3xui"
mkdir -p "$CERTDIR"
IPV4="$(detect_ipv4)"
CN="${IPV4:-$(hostname)}"

openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout "$CERTDIR/selfsigned.key" \
  -out   "$CERTDIR/selfsigned.crt" \
  -subj "/CN=${CN}"

chmod 600 "$CERTDIR/selfsigned.key"
chmod 644 "$CERTDIR/selfsigned.crt"

# –ù–ò–ß–ï–ì–û –Ω–µ –º–µ–Ω—è–µ–º –≤ /etc/x-ui/x-ui.json ‚Äî —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–∞–µ–º –ø—É—Ç–∏.

# --- –í–∫–ª—é—á–µ–Ω–∏–µ BBR (—á–µ—Ä–µ–∑ sysctl.d) ---
CONF_BBR="/etc/sysctl.d/99-bbr.conf"
backup_file "$CONF_BBR" || true
cat > "$CONF_BBR" <<'EOF'
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
EOF
sysctl --system >/dev/null

# --- –í—ã–≤–æ–¥ –∏—Ç–æ–≥–æ–≤ –∏ –ø–æ—Å—Ç-—à–∞–≥–∏ ---
IP_SHOW="${IPV4:-<IP>}"
cat <<EOF

========================================
‚úÖ –ì–æ—Ç–æ–≤–æ! 3x-ui —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Å–µ—Ä–≤–µ—Ä —É–∂–µ—Å—Ç–æ—á—ë–Ω.

‚ñ∂ –î–æ—Å—Ç—É–ø –ø–æ SSH:
   ssh -p ${NEWPORT} ${NEWUSER}@${IP_SHOW} -i <–ø—É—Ç—å_–∫_–ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É_–∫–ª—é—á—É>

   –í–ê–ñ–ù–û: –ü–æ—Ä—Ç 22/tcp —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø.
   –ï—Å–ª–∏ –≤—Ö–æ–¥ –ø–æ –Ω–æ–≤–æ–º—É –ø–æ—Ä—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç ‚Äî –∑–∞–∫—Ä–æ–π—Ç–µ 22:
       sudo ufw delete allow 22/tcp

‚ñ∂ –ü–∞–Ω–µ–ª—å 3x-ui:
   http://${IP_SHOW}:<–ø–æ—Ä—Ç>   (—É–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ "x-ui", –ø—É–Ω–∫—Ç 10)
   –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞: –∫–æ–º–∞–Ω–¥–∞ "x-ui" ‚Üí –ø—É–Ω–∫—Ç 10

‚ñ∂ SSL (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ, –ù–ï –ø—Ä–æ–ø–∏—Å–∞–Ω—ã –≤ –ø–∞–Ω–µ–ª–∏ ‚Äî –¥–æ–±–∞–≤—å—Ç–µ —Å–∞–º–∏):
   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø–∞–Ω–µ–ª–∏:
       ${CERTDIR}/selfsigned.crt
   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –ø–∞–Ω–µ–ª–∏:
       ${CERTDIR}/selfsigned.key

   –í –ø–∞–Ω–µ–ª–∏: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã ‚Üí —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç–∏ –≤—ã—à–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ.

‚ñ∂ Firewall (UFW):
   - SSH (limit)    : ${NEWPORT}/tcp
   - VPN/Xray       : 443/tcp
   - –ü–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ.
   –£–∑–Ω—Ç—å –ø–æ—Ä—Ç:  x-ui (–ø—É–Ω–∫—Ç 10)
   O—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∏–∑–≤–Ω–µ:
      sudo ufw allow <–ø–æ—Ä—Ç>
    –ó–∞–∫—Ä—ã—Ç—å:
    sudo ufw deny <–ø–æ—Ä—Ç>
   ‚ö†Ô∏è –õ—É—á—à–µ –¥–µ—Ä–∂–∞—Ç—å –ø–∞–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç–æ–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SSH-—Ç—É–Ω–Ω–µ–ª—å.
   - –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫—Ä—ã—Ç: 22/tcp (—É–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏)

‚ñ∂ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:
   1) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ö–æ–¥ –ø–æ SSH –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –Ω–æ–≤–æ–º—É –ø–æ—Ä—Ç—É.
   2) –£–¥–∞–ª–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–æ 22/tcp:  ufw delete allow 22/tcp
   3) –í x-ui –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±—Ä–æ—Å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–ø—É–Ω–∫—Ç—ã 6 –∏ 7 –≤ –º–µ–Ω—é).
   4) –ù–∞—Å—Ç—Ä–æ–π—Ç–µ VLESS/REALITY –Ω–∞ 443 –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã.
   5) –î–µ–ª–∞–π—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: apt update && apt upgrade -y

========================================

üåµüåµüåµ All done! Dancing cactus celebrates your VPN setup! üåµüåµüåµ

        \\   ^__^
         \\  (oo)\_______
            (__)\\       )\\/\\
                ||----w |
                ||     ||
                
EOF
